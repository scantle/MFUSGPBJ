% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_segments_by_length.R
\name{clean_segments_by_length}
\alias{clean_segments_by_length}
\title{Clean (Tiny) Segments by Length}
\usage{
clean_segments_by_length(
  swdf,
  min_seg_length = 1e-04,
  forward_add = T,
  verbose = T
)
}
\arguments{
\item{swdf}{Output from \code{\link{calc_stream_voronoi_weights}}. Must be ordered and contain geometry.}

\item{min_seg_length}{Minimum allowed segment length (default: 1e-4)}

\item{forward_add}{T/F Add to subsequent row in swdf (default: True). False adds to previous
row. Regardless, opposite direction will be tried at start/end of swdf}

\item{verbose}{T/F if information should be relayed through messages (default: True).}
}
\value{

}
\description{
Removes tiny (below 1e-4, by default) segments generated by \code{\link{calc_stream_voronoi_weights}} that
take up unnecessary space in the PBJ file and unnecessary processing power in MF-USG.
Adds the tiny pieces back to another segment so lengths are not lost.
Takes advantage of the fact that if it's a tiny segment it almost certainly came from
a triangle corner, and triangle corners are completely in ONE node.
}
\examples{
#-- Read in shapefiles
str <- read_sf(system.file("extdata", "straight_river.shp", package = "MFUSGPBJ"))
tri <- read_sf(system.file("extdata", "straight_triangles.shp", package = "MFUSGPBJ"))
vor <- read_sf(system.file("extdata", "straight_voronoi.shp", package = "MFUSGPBJ"))

#-- Explode polyline
str <- line_explode(str)

#-- Create SWDF
swdf <- calc_stream_voronoi_weights(stream = str, voronoi = vor, triangles = tri,
                                    geometry = T, correct_seg_order = T)

#-- Clean up
swdf <- clean_segments_by_length(swdf)
}
