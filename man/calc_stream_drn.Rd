% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_stream_drn.R
\name{calc_stream_drn}
\alias{calc_stream_drn}
\title{Calculate polyline (e.g. stream) drain locations}
\usage{
calc_stream_drn(stream, voronoi, method = "node", seg_min_length = 1e-07)
}
\arguments{
\item{stream}{sf polyline, "exploded" into segments (see \code{\link{line_explode}})}

\item{voronoi}{sf polygon of voronoi tesselation (unstructured model grid). Shapefile ID field
will be used to determine node ID.}

\item{method}{character, method to select drain nodes. Only overlap with [voronoi] nodes is
currently supported (optional, default: 'node')}

\item{seg_min_length}{numeric, minimum length of segment to include in calculation (default 1e-7).
Generally just to weed out numerical errors.}
}
\value{
SF Object/DataFrame of nodes that can be used to gener
}
\description{
Intended to provide a MODFLOW-USG Drain package that can be compared to the results of the
PBJ package, given the same grid and stream.
}
\examples{
#-- Read in shapefiles
str <- read_sf(system.file("extdata", "straight_river.shp", package = "MFUSGPBJ"))
tri <- read_sf(system.file("extdata", "straight_triangles.shp", package = "MFUSGPBJ"))
vor <- read_sf(system.file("extdata", "straight_voronoi.shp", package = "MFUSGPBJ"))

#-- Explode polyline
str <- line_explode(str)

#-- Create DRNDF
drndf <- calc_stream_drn(stream = str, voronoi = vor)
}
\seealso{
\code{\link{write.DRNpackage}}
}
\author{
Leland Scantlebury
}
